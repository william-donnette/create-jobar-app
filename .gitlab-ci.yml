.declare-get-tag: &declare-get-tag |
    function getTag() {
        local FILE_VERSION_PATH=${1}
        local DEFAULT_TAG=${2}
        if [ ! -f $FILE_VERSION_PATH ]; then
            echo "Le fichier de version n'existe pas dans ce répertoire."
            exit 1
        fi
        VERSION=$(node -p -e "require('$FILE_VERSION_PATH').version")
        export TAG="v$VERSION"
        TAG_REGEX='^v\d+\.\d+\.\d+(-alpha|-beta)?$'
        if [[ ! $TAG =~ $TAG_REGEX ]]; then
            echo "Version : $version (format invalide)"
            exit 1
        fi
    }

default:
    artifacts:
        paths:
            - package-lock.json
            - node_modules
            - coverage

# Installe les dépendances Node.js
# Mets en place les caches
node:install:
    image: node:20.15-alpine
    stage: build
    only:
        - main
    script:
        - npm install

# Construit le projet Node.js
node:build:
    image: node:20.15-alpine
    stage: build
    needs: ['node:install']
    only:
        - main
    script:
        - npm run build

# Assure qu'un seul job register est exécuté à la fois
# Applique la protection de l'environnement
.register:
    image: node:20.15-alpine
    variables:
        ENVIRONMENT: ''
    environment:
        name: $ENVIRONMENT
    resource_group: $ENVIRONMENT

# Tag la release, nouvelle version
tag:release:register:
    extends: .register
    stage: register
    variables:
        ENVIRONMENT: 'production'
        FILE_VERSION_PATH: './package.json'
    only:
        - main
    allow_failure: true
    before_script:
        - apk update
        - apk upgrade
        - apk add git bash
    script:
        - *declare-get-tag
        - git config --global user.email "willdonn17@gmail.com"
        - git config --global user.name "William Donnette"
        - git remote remove origin
        - git remote add origin https://oauth2:$OAUTH_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
        - getTag "$FILE_VERSION_PATH"
        - git tag -a "$TAG" -m "Version $TAG"
        - git push origin "$TAG"

# Crée la release sur GitLab, nouvelle version
release:register:
    extends: .register
    stage: register
    variables:
        ENVIRONMENT: 'production'
    only:
        - tags
        - /^v\d+\.\d+\.\d+(-alpha|-beta)?$/
    release:
        tag_name: $CI_COMMIT_TAG
        name: 'Version $CI_COMMIT_TAG'
        description: 'Realease created by William Donnette'
    before_script:
        - apk update
        - apk upgrade
        - apk add bash curl
        - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64"
        - chmod +x /usr/local/bin/release-cli
    script:
        - release-cli -v
        - echo "Creating release $CI_COMMIT_TAG"

# Crée le package sur Gitlab, nouvelle version
package:register:
    extends: .register
    stage: register
    allow_failure: false
    variables:
        ENVIRONMENT: 'production'
    before_script:
        - apk update
        - apk upgrade
        - apk add bash curl
        - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
        - mv .secure_files/.npmrc .npmrc
    script:
        - npm install
        - npm run build
        - npm publish
    only:
        - tags
        - /^v\d+\.\d+\.\d+(-alpha|-beta)?$/

stages:
    - build
    - register
